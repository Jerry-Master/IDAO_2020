plot(ddi$epoch, newVZ, type="l")
}
for (i in c(249)) {
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
newX <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
newY <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
newZ <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
newVX <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
newVY <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
newVZ <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
plot(ddi$epoch, newX, type="l")
plot(ddi$epoch, newY, type="l")
plot(ddi$epoch, newZ, type="l")
plot(ddi$epoch, newVX, type="l")
plot(ddi$epoch, newVY, type="l")
plot(ddi$epoch, newVZ, type="l")
}
for (i in c(13)) {
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
newX <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
newY <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
newZ <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
newVX <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
newVY <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
newVZ <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
plot(ddi$epoch, newX, type="l")
plot(ddi$epoch, newY, type="l")
plot(ddi$epoch, newZ, type="l")
plot(ddi$epoch, newVX, type="l")
plot(ddi$epoch, newVY, type="l")
plot(ddi$epoch, newVZ, type="l")
}
for (i in c(20)) {
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
newX <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
newY <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
newZ <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
newVX <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
newVY <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
newVZ <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
plot(ddi$epoch, newX, type="l")
plot(ddi$epoch, newY, type="l")
plot(ddi$epoch, newZ, type="l")
plot(ddi$epoch, newVX, type="l")
plot(ddi$epoch, newVY, type="l")
plot(ddi$epoch, newVZ, type="l")
}
write.csv(c("id", "x", "y", "z", "Vx", "Vy", "Vz"), file="corrected.csv", quote = F)
for (i in 0:10) {
print(i)
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$V <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
write.csv(ddi, file="corrected.csv", quote = F, append = T)
}
write.csv("id,epoch,sat_id,x,y,z,Vx,Vy,Vz,x_sim,y_sim,z_sim,Vx_sim,Vy_sim,Vz_sim,V", file="corrected.csv", quote = F)
for (i in 0:10) {
print(i)
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$V <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
write.csv(ddi, file="corrected.csv", quote = F, append = T)
}
ans <- c()
for (i in 0:10) {
print(i)
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$V <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
if (i == 0) {
ans <- ddi
} else{
ans <- rbind(ans, ddi)
}
}
ans$id <- format(ans$id, scientific = F)
ans$x <- format(ans$x, scientific = F)
ans$y <- format(ans$y, scientific = F)
ans$z <- format(ans$z, scientific = F)
ans$Vx <- format(ans$Vx, scientific = F)
ans$Vy <- format(ans$Vy, scientific = F)
ans$Vz <- format(ans$Vz, scientific = F)
write.csv(ans, "corrected.csv", quote = F, row.names = F)
i <- 1
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$V <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
plot(ddi$epoch, ddi$Vx, type="l")
i <- 1
ddi <- dd %>% filter(sat_id == i)
i <- 1
ddi <- dd %>% filter(sat_id == i)
i <- 1
ddi <- dd %>% filter(sat_id == i)
library(readr)
library(car)
library(emmeans)
library(tables)
library(RcmdrMisc)
library(dplyr)
setwd("../../data")
dd <- read_csv("train.csv")
dd$epoch <- as.numeric(as.POSIXct(dd$epoch))
dd$epoch <- dd$epoch - min(dd$epoch)
minims <- function(v) {
ans <- c()
for (i in 2:(length(v)-1)) {
if (v[i] < v[i+1] && v[i] < v[i-1]) {
ans <- c(ans, i)
}
}
ans
}
maxims <- function(v) {
ans <- c()
for (i in 2:(length(v)-1)) {
if (v[i] > v[i+1] && v[i] > v[i-1]) {
ans <- c(ans, i)
}
}
ans
}
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$Vx <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
plot(ddi$epoch, ddi$Vx, type="l")
ans <- c()
for (i in 0:10) {
print(i)
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$Vx <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
if (i == 0) {
ans <- ddi
} else{
ans <- rbind(ans, ddi)
}
}
ans$id <- format(ans$id, scientific = F)
ans$x <- format(ans$x, scientific = F)
ans$y <- format(ans$y, scientific = F)
ans$z <- format(ans$z, scientific = F)
ans$Vx <- format(ans$Vx, scientific = F)
ans$Vy <- format(ans$Vy, scientific = F)
ans$Vz <- format(ans$Vz, scientific = F)
write.csv(ans, "corrected.csv", quote = F, row.names = F)
ans <- c()
for (i in 0:599) {
print(i)
ddi <- dd %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ddi$x <- (ddi$x - predict(rectaXdown, ddi)) * 2 / (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) - 1
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ddi$y <- (ddi$y - predict(rectaYdown, ddi)) * 2 / (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) - 1
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ddi$z <- (ddi$z - predict(rectaZdown, ddi)) * 2 / (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) - 1
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ddi$Vx <- (ddi$Vx - predict(rectaVXdown, ddi)) * 2 / (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) - 1
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ddi$Vy <- (ddi$Vy - predict(rectaVYdown, ddi)) * 2 / (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) - 1
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ddi$Vz <- (ddi$Vz - predict(rectaVZdown, ddi)) * 2 / (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) - 1
if (i == 0) {
ans <- ddi
} else{
ans <- rbind(ans, ddi)
}
}
ans$id <- format(ans$id, scientific = F)
ans$x <- format(ans$x, scientific = F)
ans$y <- format(ans$y, scientific = F)
ans$z <- format(ans$z, scientific = F)
ans$Vx <- format(ans$Vx, scientific = F)
ans$Vy <- format(ans$Vy, scientific = F)
ans$Vz <- format(ans$Vz, scientific = F)
write.csv(ans, "corrected.csv", quote = F, row.names = F)
changed <- read.csv("modified.csv")
i = 37
ddi <- dd %>% filter(sat_id == i)
ci <- changed %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ci$x <- (ci$x + 1) / 2 * (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) + predict(rectaXdown, ddi)
plot(ci$epoch, ci$x, type="l")
lines(ddi$epoch, ddi$x)
i = 37
ddi <- dd %>% filter(sat_id == i)
ci <- changed %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ci$x <- (ci$x + 1) / 2 * (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) + predict(rectaXdown, ddi)
plot(ci$epoch, ci$x, type="l", col="blue")
lines(ddi$epoch, ddi$x)
ans <- c()
for (i in 0:599) {
print(i)
ddi <- dd %>% filter(sat_id == i)
ci <- changed %>% filter(sat_id == i)
minddiX <- ddi[minims(ddi$x),]
rectaXdown <- lm(x ~ epoch, data = minddiX)
maxddiX <- ddi[maxims(ddi$x),]
rectaXup <- lm(x ~ epoch, data = maxddiX)
ci$x <- (ci$x + 1) / 2 * (predict(rectaXup,ddi) - predict(rectaXdown, ddi)) + predict(rectaXdown, ddi)
minddiY <- ddi[minims(ddi$y),]
rectaYdown <- lm(y ~ epoch, data = minddiY)
maxddiY <- ddi[maxims(ddi$y),]
rectaYup <- lm(y ~ epoch, data = maxddiY)
ci$y <- (ci$y + 1) / 2 * (predict(rectaYup,ddi) - predict(rectaYdown, ddi)) + predict(rectaYdown, ddi)
minddiZ <- ddi[minims(ddi$z),]
rectaZdown <- lm(z ~ epoch, data = minddiZ)
maxddiZ <- ddi[maxims(ddi$z),]
rectaZup <- lm(z ~ epoch, data = maxddiZ)
ci$z <- (ci$z + 1) / 2 * (predict(rectaZup,ddi) - predict(rectaZdown, ddi)) + predict(rectaZdown, ddi)
minddiVX <- ddi[minims(ddi$Vx),]
rectaVXdown <- lm(Vx ~ epoch, data = minddiVX)
maxddiVX <- ddi[maxims(ddi$Vx),]
rectaVXup <- lm(Vx ~ epoch, data = maxddiVX)
ci$Vx <- (ci$Vx + 1) / 2 * (predict(rectaVXup,ddi) - predict(rectaVXdown, ddi)) + predict(rectaVXdown, ddi)
minddiVY <- ddi[minims(ddi$Vy),]
rectaVYdown <- lm(Vy ~ epoch, data = minddiVY)
maxddiVY <- ddi[maxims(ddi$Vy),]
rectaVYup <- lm(Vy ~ epoch, data = maxddiVY)
ci$Vy <- (ci$Vy + 1) / 2 * (predict(rectaVYup,ddi) - predict(rectaVYdown, ddi)) + predict(rectaVYdown, ddi)
minddiVZ <- ddi[minims(ddi$Vz),]
rectaVZdown <- lm(Vz ~ epoch, data = minddiVZ)
maxddiVZ <- ddi[maxims(ddi$Vz),]
rectaVZup <- lm(Vz ~ epoch, data = maxddiVZ)
ci$Vz <- (ci$Vz + 1) / 2 * (predict(rectaVZup,ddi) - predict(rectaVZdown, ddi)) + predict(rectaVZdown, ddi)
if (i == 0) {
ans <- ci
} else{
ans <- rbind(ans, ci)
}
}
ans$id <- format(ans$id, scientific = F)
ans$x <- format(ans$x, scientific = F)
ans$y <- format(ans$y, scientific = F)
ans$z <- format(ans$z, scientific = F)
ans$Vx <- format(ans$Vx, scientific = F)
ans$Vy <- format(ans$Vy, scientific = F)
ans$Vz <- format(ans$Vz, scientific = F)
write.csv(ans, "corrected2.csv", quote = F, row.names = F)
mins <- minims(raro$x)
plot(raro$epoch[mins], raro$x[mins])
mindd <- raro[mins,]
recta <- lm(x ~ epoch, data = mindd)
plot(raro$epoch, raro$x - predict(recta, newdata=raro), type="l")
mindd <- raro[mins,]
recta <- lm(x ~ epoch, data = mindd)
plot(raro$epoch, raro$x, type="l")
